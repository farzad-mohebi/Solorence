version: "3.9"

services:
  db:
    container_name: meet_db
    image: postgres:15-alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    env_file:
      - ./postgres/.env
    expose:
      - 5432
    restart: always

  backend:
    container_name: meet_backend
    build:
      context: .
      dockerfile: ./dockerfiles/dev.core.Dockerfile
    volumes:
      - ./core:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 8000:8000
    env_file:
      - ./core/.env
    restart: always
    depends_on:
      - db
  front:
    container_name: meet_front
    build:
      context: .
      dockerfile: ./dockerfiles/prod.front.Dockerfile
    env_file:
      - ./front/.env
    ports:
      - 3000:3000
    command: tail -F anything
    volumes:
      - ./front:/usr/src/front
  #      - /usr/src/front/node_modules/
  #      - /usr/src/front/.nuxt/

  #  pgadmin:
  #    container_name: meet_pgadmin
  #    image: dpage/pgadmin4
  #    volumes:
  #      - ./pgadmin:/var/lib/pgadmin
  #    env_file:
  #      - ./pgadmin/.env
  #    ports:
  #      - "8888:80"
  #    restart: unless-stopped

  nginx:
    container_name: meet_nginx
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  minio:
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:8040'
      - '9001:8041'
    networks:
      - minionetwork
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=your_username
      - MINIO_ROOT_PASSWORD=your_pasword
      - MINIO_DEFAULT_BUCKETS=files

networks:
  minionetwork:
    driver: bridge

volumes:
  minio_data:
    driver: local